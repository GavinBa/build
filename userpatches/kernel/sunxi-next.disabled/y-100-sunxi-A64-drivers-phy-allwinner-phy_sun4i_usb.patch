diff --git a/drivers/phy/allwinner/phy-sun4i-usb.c b/drivers/phy/allwinner/phy-sun4i-usb.c
index 48a8cefd8..4bbd9ede3 100644
--- a/drivers/phy/allwinner/phy-sun4i-usb.c
+++ b/drivers/phy/allwinner/phy-sun4i-usb.c
@@ -478,7 +478,8 @@ static int sun4i_usb_phy_power_off(struct phy *_phy)
 	return 0;
 }
 
-static int sun4i_usb_phy_set_mode(struct phy *_phy, enum phy_mode mode)
+static int sun4i_usb_phy_set_mode(struct phy *_phy,
+				  enum phy_mode mode, int submode)
 {
 	struct sun4i_usb_phy *phy = phy_get_drvdata(_phy);
 	struct sun4i_usb_phy_data *data = to_sun4i_usb_phy_data(phy);
@@ -553,7 +554,6 @@ static void sun4i_usb_phy0_id_vbus_det_scan(struct work_struct *work)
 	struct sun4i_usb_phy_data *data =
 		container_of(work, struct sun4i_usb_phy_data, detect.work);
 	struct phy *phy0 = data->phys[0].phy;
-	struct sun4i_usb_phy *phy = phy_get_drvdata(phy0);
 	bool force_session_end, id_notify = false, vbus_notify = false;
 	int id_det, vbus_det;
 
@@ -610,9 +610,6 @@ static void sun4i_usb_phy0_id_vbus_det_scan(struct work_struct *work)
 			mutex_unlock(&phy0->mutex);
 		}
 
-		/* Enable PHY0 passby for host mode only. */
-		sun4i_usb_phy_passby(phy, !id_det);
-
 		/* Re-route PHY0 if necessary */
 		if (data->cfg->phy0_dual_route)
 			sun4i_usb_phy0_reroute(data, id_det);
@@ -819,31 +816,29 @@ static int sun4i_usb_phy_probe(struct platform_device *pdev)
 		phy_set_drvdata(phy->phy, &data->phys[i]);
 	}
 
-	if (!of_find_property(np, "force-poll-vbus-id-det", NULL)) {
-		data->id_det_irq = gpiod_to_irq(data->id_det_gpio);
-		if (data->id_det_irq > 0) {
-			ret = devm_request_irq(dev, data->id_det_irq,
-					sun4i_usb_phy0_id_vbus_det_irq,
-					IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
-					"usb0-id-det", data);
-			if (ret) {
-				dev_err(dev, "Err requesting id-det-irq: %d\n", ret);
-				return ret;
-			}
+	data->id_det_irq = gpiod_to_irq(data->id_det_gpio);
+	if (data->id_det_irq > 0) {
+		ret = devm_request_irq(dev, data->id_det_irq,
+				sun4i_usb_phy0_id_vbus_det_irq,
+				IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
+				"usb0-id-det", data);
+		if (ret) {
+			dev_err(dev, "Err requesting id-det-irq: %d\n", ret);
+			return ret;
 		}
+	}
 
-		data->vbus_det_irq = gpiod_to_irq(data->vbus_det_gpio);
-		if (data->vbus_det_irq > 0) {
-			ret = devm_request_irq(dev, data->vbus_det_irq,
-					sun4i_usb_phy0_id_vbus_det_irq,
-					IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
-					"usb0-vbus-det", data);
-			if (ret) {
-				dev_err(dev, "Err requesting vbus-det-irq: %d\n", ret);
-				data->vbus_det_irq = -1;
-				sun4i_usb_phy_remove(pdev); /* Stop detect work */
-				return ret;
-			}
+	data->vbus_det_irq = gpiod_to_irq(data->vbus_det_gpio);
+	if (data->vbus_det_irq > 0) {
+		ret = devm_request_irq(dev, data->vbus_det_irq,
+				sun4i_usb_phy0_id_vbus_det_irq,
+				IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,
+				"usb0-vbus-det", data);
+		if (ret) {
+			dev_err(dev, "Err requesting vbus-det-irq: %d\n", ret);
+			data->vbus_det_irq = -1;
+			sun4i_usb_phy_remove(pdev); /* Stop detect work */
+			return ret;
 		}
 	}
 
