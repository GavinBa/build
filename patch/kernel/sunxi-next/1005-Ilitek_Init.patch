diff --git a/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c b/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c
index aef487941..f3e31dd01 100644
--- a/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c
+++ b/drivers/gpu/drm/panel/panel-ilitek-ili9881c.c
@@ -298,221 +298,9 @@ static int ili9881c_send_cmd_data(struct ili9881c *ctx, const void *data, size_t
 ({								\
 	static const u8 d[] = { seq };				\
 								\
- ili9881c_sen_cmd_data(ctx, d, ARRAY_SIZE(d));		\
+ ili9881c_send_cmd_data(ctx, d, ARRAY_SIZE(d));		\
 })
 
-void LCD_HorizontalWidth_VerticalHeight(unsigned short WX,unsigned short HY)
-{
-	
-    unsigned char temp;
-
-	temp=(WX/8)-1;
-	Write_Command(0x14);
-	Write_Data(temp);
-    
-    temp=WX%8;
-	Write_Command(0x15);
-	Write_Data(temp);
-    
-    temp=HY-1;
-	Write_Command(0x1A);
-	Write_Data(temp);
-	    
-	temp=(HY-1)>>8;
-	Write_Command(0x1B);
-	Write_Data(temp);
-}
-
-void LCD_Horizontal_Non_Display(unsigned short WX)
-{
-	unsigned char temp;
-
-	temp=(WX/8)-1;
-	Write_Command(0x16);
-	Write_Data(temp);
-    
-    temp=WX%8;
-	Write_Command(0x17);
-	Write_Data(temp);
-}
-
-void LCD_HSYNC_Start_Position(unsigned short WX)
-{
-	unsigned char temp;
-
-	temp=(WX/8)-1;
-	Write_Command(0x18);
-	Write_Data(temp);
-}
-
-void LCD_HSYNC_Pulse_Width(unsigned short WX)
-{
-	unsigned char temp;
-
-	temp=(WX/8)-1;
-	Write_Command(0x19);
-	Write_Data(temp);	
-}
-
-
-void LCD_Vertical_Non_Display(unsigned short HY)
-{
-	unsigned char temp;
-
-    temp=HY-1;
-	Write_Command(0x1C);
-	Write_Data(temp);
-
-	Write_Command(0x1D);
-	Write_Data(temp>>8);
-}
-
-void LCD_VSYNC_Start_Position(unsigned short HY)
-{
-
-	unsigned char temp;
-
-    temp=HY-1;
-	Write_Command(0x1E);
-	Write_Data(temp);
-}
-
-
-void LCD_VSYNC_Pulse_Width(unsigned short HY)
-{
-
-	unsigned char temp;
-    temp=HY-1;
-	Write_Command(0x1F);
-	Write_Data(temp);
-
-}
-
-void Main_Image_Start_Address(unsigned long Addr)	
-{
-/*
-[20h] Main Image Start Address[7:2]
-[21h] Main Image Start Address[15:8]
-[22h] Main Image Start Address [23:16]
-[23h] Main Image Start Address [31:24]
-*/
-	Write_Command(0x20);	Write_Data(Addr);
-	Write_Command(0x21);	Write_Data(Addr>>8);
-	Write_Command(0x22);	Write_Data(Addr>>16);
-	Write_Command(0x23);	Write_Data(Addr>>24);
-}
-
-void Main_Image_Width(unsigned short WX)	
-{
-/*
-[24h] Main Image Width [7:0]
-[25h] Main Image Width [12:8]
-Unit: Pixel.
-It must be divisible by 4. MIW Bit [1:0] tie to “0” internally.
-The value is physical pixel number. Maximum value is 8188 pixels
-*/
-	Write_Command(0x24);	Write_Data(WX);
-	Write_Command(0x25);	Write_Data(WX>>8);
-}
-
-void Main_Window_Start_XY(unsigned short WX,unsigned short HY)	
-{
-/*
-[26h] Main Window Upper-Left corner X-coordination [7:0]
-[27h] Main Window Upper-Left corner X-coordination [12:8]
-Reference Main Image coordination.
-Unit: Pixel
-It must be divisible by 4. MWULX Bit [1:0] tie to “0” internally.
-X-axis coordination plus Horizontal display width cannot large than 8188.
-
-[28h] Main Window Upper-Left corner Y-coordination [7:0]
-[29h] Main Window Upper-Left corner Y-coordination [12:8]
-Reference Main Image coordination.
-Unit: Pixel
-Range is between 0 and 8191.
-*/
-	Write_Command(0x26);	Write_Data(WX);
-	Write_Command(0x27);	Write_Data(WX>>8);
-	Write_Command(0x28);	Write_Data(HY);
-	Write_Command(0x29);	Write_Data(HY>>8);
-}
-
-void Canvas_Image_Start_address(unsigned long Addr)	
-{
-/*
-[50h] Start address of Canvas [7:0]
-[51h] Start address of Canvas [15:8]
-[52h] Start address of Canvas [23:16]
-[53h] Start address of Canvas [31:24]
-*/
-	Write_Command(0x50);	Write_Data(Addr);
-	Write_Command(0x51);	Write_Data(Addr>>8);
-	Write_Command(0x52);	Write_Data(Addr>>16);
-	Write_Command(0x53);	Write_Data(Addr>>24);
-}
-
-void Canvas_image_width(unsigned short WX)	
-{
-/*
-[54h] Canvas image width [7:2]
-[55h] Canvas image width [12:8]
-*/
-	Write_Command(0x54);	Write_Data(WX);
-	Write_Command(0x55);	Write_Data(WX>>8);
-}
-
-void Active_Window_XY(unsigned short WX,unsigned short HY)	
-{
-/*
-[56h] Active Window Upper-Left corner X-coordination [7:0]
-[57h] Active Window Upper-Left corner X-coordination [12:8]
-[58h] Active Window Upper-Left corner Y-coordination [7:0]
-[59h] Active Window Upper-Left corner Y-coordination [12:8]
-*/
-	Write_Command(0x56);	Write_Data(WX);
-	Write_Command(0x57);	Write_Data(WX>>8);
-	Write_Command(0x58);	Write_Data(HY);
-	Write_Command(0x59);	Write_Data(HY>>8);
-
-}
-
-void Active_Window_WH(unsigned short WX,unsigned short HY)	
-{
-/*
-[5Ah] Width of Active Window [7:0]
-[5Bh] Width of Active Window [12:8]
-[5Ch] Height of Active Window [7:0]
-[5Dh] Height of Active Window [12:8]
-*/
-	Write_Command(0x5A);	Write_Data(WX);
-	Write_Command(0x5B);	Write_Data(WX>>8);
-	Write_Command(0x5C);	Write_Data(HY);
-	Write_Command(0x5D);	Write_Data(HY>>8);
-}
-
-void Goto_Pixel_XY(unsigned short WX,unsigned short HY)	
-{
-/*
-Set Graphic Read/Write position
-
-REG[5Eh] bit3, Select to read back Graphic Read/Write position.
-When DPRAM Linear mode:Graphic Read/Write Position [31:24][23:16][15:8][7:0]
-When DPRAM Active window mode:Graphic Read/Write 
-Horizontal Position [12:8][7:0], 
-Vertical Position [12:8][7:0].
-Reference Canvas image coordination. Unit: Pixel
-*/
-	Write_Command(0x5F);
-	Write_Data(WX);
-	Write_Command(0x60);
-	Write_Data(WX>>8);
-	Write_Command(0x61);
-	Write_Data(HY);
-	Write_Command(0x62);
-	Write_Data(HY>>8);
-
-}
-
 static int ili9881c_prepare(struct drm_panel *panel)
 {
 	struct ili9881c *ctx = panel_to_ili9881c(panel);
@@ -542,28 +330,124 @@ static int ili9881c_prepare(struct drm_panel *panel)
 
 	dcs_write_seq(ctx, 0x13, 0x00);
 	
-	LCD_HorizontalWidth_VerticalHeight(720,1280);
-  LCD_Horizontal_Non_Display(12);              // HBP R16~17h     
-	LCD_HSYNC_Start_Position(18);                // HFP R18h
-	LCD_HSYNC_Pulse_Width(2);                    // HSW R19h
-  LCD_Vertical_Non_Display(14);                 // VBP R1C~1Dh
-	LCD_VSYNC_Start_Position(8);                 // VFP R1Eh
-	LCD_VSYNC_Pulse_Width(2);                    // VSW R1Fh
-
-	Main_Image_Start_Address(0);                  // Main Image Start Address
-	Main_Image_Width(720*3);
-	Main_Window_Start_XY(0,0);
-	Canvas_Image_Start_address(0);
-	Canvas_image_width(720*3)e
-	Active_Window_XY(0,0);
-	Active_Window_WH(720,1280);
-
-	Command_Write(0x5e,0x01);	//Memory XY Mode
-	Goto_Pixel_XY(0,0);
-
-	Active_Window_XY(0,0);
-	Active_Window_WH(720,1280);
-	Goto_Pixel_XY(0,0);
+	//LCD_HorizontalWidth_VerticalHeight(ctx, 720,1280);
+	dcs_write_seq(ctx, 0x14, (720/8)-1);
+	dcs_write_seq(ctx, 0x15, 720%8);
+	dcs_write_seq(ctx, 0x1A, 1280-1);
+	dcs_write_seq(ctx, 0x1B, (1280-1)>>8);
+  //LCD_Horizontal_Non_Display(ctx, 12);              // HBP R16~17h     
+	dcs_write_seq(ctx, 0x16, (12/8)-1);
+	dcs_write_seq(ctx, 0x17, 12%8);
+	//LCD_HSYNC_Start_Position(ctx, 18);                // HFP R18h
+	dcs_write_seq(ctx, 0x18, (18/8)-1);
+	//LCD_HSYNC_Pulse_Width(ctx, 2);                    // HSW R19h
+	dcs_write_seq(ctx, 0x19, (2/8)-1);
+  //LCD_Vertical_Non_Display(ctx, 14);                 // VBP R1C~1Dh
+	dcs_write_seq(ctx, 0x1C, 14-1);
+	dcs_write_seq(ctx, 0x1D, (14-1)>>8);
+	//LCD_VSYNC_Start_Position(ctx, 8);                 // VFP R1Eh
+	dcs_write_seq(ctx, 0x1E, 8-1);
+	//LCD_VSYNC_Pulse_Width(ctx, 2);                    // VSW R1Fh
+	dcs_write_seq(ctx, 0x1F, 2-1);
+
+	//Main_Image_Start_Address(ctx, 0);                  // Main Image Start Address
+	/*
+		[20h] Main Image Start Address[7:2]
+		[21h] Main Image Start Address[15:8]
+		[22h] Main Image Start Address [23:16]
+		[23h] Main Image Start Address [31:24]
+	*/
+	dcs_write_seq(ctx, 0x20, 0);
+	dcs_write_seq(ctx, 0x21, 0>>8);
+	dcs_write_seq(ctx, 0x22, 0>>16);
+	dcs_write_seq(ctx, 0x23, 0>>24);
+	//Main_Image_Width(ctx, 720*3);
+	/*
+		[24h] Main Image Width [7:0]
+		[25h] Main Image Width [12:8]
+		Unit: Pixel.
+		It must be divisible by 4. MIW Bit [1:0] tie to “0” internally.
+		The value is physical pixel number. Maximum value is 8188 pixels
+	*/
+	dcs_write_seq(ctx, 0x24, 720*3);
+	dcs_write_seq(ctx, 0x25, (720*3)>>8);
+	//Main_Window_Start_XY(ctx, 0,0);
+	/*
+		[26h] Main Window Upper-Left corner X-coordination [7:0]
+		[27h] Main Window Upper-Left corner X-coordination [12:8]
+		Reference Main Image coordination.
+		Unit: Pixel
+		It must be divisible by 4. MWULX Bit [1:0] tie to “0” internally.
+		X-axis coordination plus Horizontal display width cannot large than 8188.
+
+		[28h] Main Window Upper-Left corner Y-coordination [7:0]
+		[29h] Main Window Upper-Left corner Y-coordination [12:8]
+		Reference Main Image coordination.
+		Unit: Pixel
+		Range is between 0 and 8191.
+	*/
+	dcs_write_seq(ctx, 0x26, 0);
+	dcs_write_seq(ctx, 0x27, 0>>8);
+	dcs_write_seq(ctx, 0x28, 0);
+	dcs_write_seq(ctx, 0x29, 0>>8);
+	//Canvas_Image_Start_address(ctx, 0);
+	/*
+		[50h] Start address of Canvas [7:0]
+		[51h] Start address of Canvas [15:8]
+		[52h] Start address of Canvas [23:16]
+		[53h] Start address of Canvas [31:24]
+	*/
+	dcs_write_seq(ctx, 0x50, 0);
+	dcs_write_seq(ctx, 0x51, 0>>8);
+	dcs_write_seq(ctx, 0x52, 0>>16);
+	dcs_write_seq(ctx, 0x53, 0>>24);
+	//Canvas_image_width(ctx, 720*3);
+	/*
+		[54h] Canvas image width [7:2]
+		[55h] Canvas image width [12:8]
+	*/
+	dcs_write_seq(ctx, 0x54, 720*3);
+	dcs_write_seq(ctx, 0x55, (720*3)>>8);
+	//Active_Window_XY(ctx, 0,0);
+	/*
+		[56h] Active Window Upper-Left corner X-coordination [7:0]
+		[57h] Active Window Upper-Left corner X-coordination [12:8]
+		[58h] Active Window Upper-Left corner Y-coordination [7:0]
+		[59h] Active Window Upper-Left corner Y-coordination [12:8]
+	*/
+	dcs_write_seq(ctx, 0x56, 0);
+	dcs_write_seq(ctx, 0x57, 0>>8);
+	dcs_write_seq(ctx, 0x58, 0);
+	dcs_write_seq(ctx, 0x59, 0>>8);
+	//Active_Window_WH(ctx, 720,1280);
+	/*
+		[5Ah] Width of Active Window [7:0]
+		[5Bh] Width of Active Window [12:8]
+		[5Ch] Height of Active Window [7:0]
+		[5Dh] Height of Active Window [12:8]
+	*/
+	dcs_write_seq(ctx, 0x5A, 720);
+	dcs_write_seq(ctx, 0x5B, 720>>8);
+	dcs_write_seq(ctx, 0x5C, 1280);
+	dcs_write_seq(ctx, 0x5D, 1280>>8);
+
+
+	dcs_write_seq(ctx, 0x5e,0x01);	//Memory XY Mode
+	//Goto_Pixel_XY(0,0);
+	/*
+		Set Graphic Read/Write position
+
+		REG[5Eh] bit3, Select to read back Graphic Read/Write position.
+		When DPRAM Linear mode:Graphic Read/Write Position [31:24][23:16][15:8][7:0]
+		When DPRAM Active window mode:Graphic Read/Write 
+		Horizontal Position [12:8][7:0], 
+		Vertical Position [12:8][7:0].
+		Reference Canvas image coordination. Unit: Pixel
+	*/
+	dcs_write_seq(ctx, 0x5F, 0);
+	dcs_write_seq(ctx, 0x60, 0>>8);
+	dcs_write_seq(ctx, 0x61, 0);
+	dcs_write_seq(ctx, 0x62, 0>>8);
 
 
 	dcs_write_seq(ctx, 0xB7, 0x50, 0x00);
