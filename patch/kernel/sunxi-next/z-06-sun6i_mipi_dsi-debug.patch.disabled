diff --git a/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c b/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c
index feb8c54c5..166f8d6f5 100644
--- a/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c
+++ b/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c
@@ -17,6 +17,7 @@
 #include <linux/slab.h>
 
 #include <linux/phy/phy.h>
+#include <linux/printk.h>
 
 #include <drm/drmP.h>
 #include <drm/drm_atomic_helper.h>
@@ -324,6 +325,8 @@ static void sun6i_dsi_inst_setup(struct sun6i_dsi *dsi,
 static void sun6i_dsi_inst_init(struct sun6i_dsi *dsi,
 				struct mipi_dsi_device *device)
 {
+
+	printk("DEBUG - sun6i_dsi_inst_init - Entering\n");
 	u8 lanes_mask = GENMASK(device->lanes - 1, 0);
 
 	sun6i_dsi_inst_setup(dsi, DSI_INST_ID_LP11, DSI_INST_MODE_STOP,
@@ -355,6 +358,7 @@ static void sun6i_dsi_inst_init(struct sun6i_dsi *dsi,
 		     SUN6I_DSI_INST_JUMP_CFG_POINT(DSI_INST_ID_NOP) |
 		     SUN6I_DSI_INST_JUMP_CFG_TO(DSI_INST_ID_HSCEXIT) |
 		     SUN6I_DSI_INST_JUMP_CFG_NUM(1));
+	printk("DEBUG - sun6i_dsi_inst_init - Exiting\n");
 };
 
 static u16 sun6i_dsi_get_video_start_delay(struct sun6i_dsi *dsi,
@@ -370,6 +374,7 @@ static u16 sun6i_dsi_get_video_start_delay(struct sun6i_dsi *dsi,
 	if (!start_delay)
 		start_delay = 1;
 
+	printk("DEBUG - sun6i_si_get_video_start_delay - start_delay = %d\n",start_delay);
 	return start_delay;
 }
 
@@ -1012,8 +1017,13 @@ static int sun6i_dsi_bind(struct device *dev, struct device *master,
 	struct sun6i_dsi *dsi = dev_get_drvdata(dev);
 	int ret;
 
+	printk("DEBUG - sun6i_dsi_bind - Entering\n");
+
 	if (!dsi->panel)
+	{
+		printk("DEBUG - sun6i_dsi_bind - EPROBE_DEFER\n");
 		return -EPROBE_DEFER;
+	}
 
 	dsi->drv = drv;
 
@@ -1050,9 +1060,11 @@ static int sun6i_dsi_bind(struct device *dev, struct device *master,
 	drm_connector_attach_encoder(&dsi->connector, &dsi->encoder);
 	drm_panel_attach(dsi->panel, &dsi->connector);
 
+	printk("DEBUG - sun6i_dsi_bind - Exiting\n");
 	return 0;
 
 err_cleanup_connector:
+	printk("DEBUG - sun6i_dsi_bind - err_cleanup_connector - ree = %d\n",ret);
 	drm_encoder_cleanup(&dsi->encoder);
 	regulator_disable(dsi->regulator);
 	return ret;
