diff --git a/drivers/i2c/busses/i2c-mv64xxx.c b/drivers/i2c/busses/i2c-mv64xxx.c
index cf4af7482..7332d2b79 100644
--- a/drivers/i2c/busses/i2c-mv64xxx.c
+++ b/drivers/i2c/busses/i2c-mv64xxx.c
@@ -534,17 +534,21 @@ static void
 mv64xxx_i2c_wait_for_completion(struct mv64xxx_i2c_data *drv_data)
 {
 	long		time_left;
-	unsigned long	flags;
+	long		flags;
 	char		abort = 0;
 
 	time_left = wait_event_timeout(drv_data->waitq,
 		!drv_data->block, drv_data->adapter.timeout);
-
+	dev_err(&drv_data->adapter.dev,"mv64xxx: flags = %i\n",flags);
+	dev_err(&drv_data->adapter.dev,"mv64xxx: time_left = %i\n",time_left);
 	spin_lock_irqsave(&drv_data->lock, flags);
+	dev_err(&drv_data->adapter.dev,"mv64xxx: flags = %i\n",flags);
 	if (!time_left) { /* Timed out */
+		dev_err(&drv_data->adapter.dev,"mv64xxx: Timedout\n");
 		drv_data->rc = -ETIMEDOUT;
 		abort = 1;
 	} else if (time_left < 0) { /* Interrupted/Error */
+		dev_err(&drv_data->adapter.dev,"mv64xxx: Interrupted/Error\n");
 		drv_data->rc = time_left; /* errno value */
 		abort = 1;
 	}
@@ -552,9 +556,11 @@ mv64xxx_i2c_wait_for_completion(struct mv64xxx_i2c_data *drv_data)
 	if (abort && drv_data->block) {
 		drv_data->aborting = 1;
 		spin_unlock_irqrestore(&drv_data->lock, flags);
+		dev_err(&drv_data->adapter.dev,"mv64xxx: flags = %i\n",flags);
 
 		time_left = wait_event_timeout(drv_data->waitq,
 			!drv_data->block, drv_data->adapter.timeout);
+		dev_err(&drv_data->adapter.dev,"mv64xxx: time_left = %i\n",time_left);
 
 		if ((time_left <= 0) && drv_data->block) {
 			drv_data->state = MV64XXX_I2C_STATE_IDLE;
