diff --git a/Makefile b/Makefile
index c5f07826a..8a32c97fb 100644
--- a/Makefile
+++ b/Makefile
@@ -625,15 +625,18 @@ ifeq ($(may-sync-config),1)
 # Read in dependencies to all Kconfig* files, make sure to run syncconfig if
 # changes are detected. This should be included after arch/$(SRCARCH)/Makefile
 # because some architectures define CROSS_COMPILE there.
--include include/config/auto.conf.cmd
+include include/config/auto.conf.cmd
 
 # To avoid any implicit rule to kick in, define an empty command
-$(KCONFIG_CONFIG) include/config/auto.conf.cmd: ;
+$(KCONFIG_CONFIG): ;
 
 # The actual configuration files used during the build are stored in
 # include/generated/ and include/config/. Update them if .config is newer than
 # include/config/auto.conf (which mirrors .config).
-include/config/%.conf: $(KCONFIG_CONFIG) include/config/auto.conf.cmd
+#
+# This exploits the 'multi-target pattern rule' trick.
+# The syncconfig should be executed only once to make all the targets.
+%/auto.conf %/auto.conf.cmd %/tristate.conf: $(KCONFIG_CONFIG)
 	$(Q)$(MAKE) -f $(srctree)/Makefile syncconfig
 else
 # External modules and some install targets need include/generated/autoconf.h
diff --git a/scripts/package/mkdebian b/scripts/package/mkdebian
index edcad61fe..bc6942b92 100755
--- a/scripts/package/mkdebian
+++ b/scripts/package/mkdebian
@@ -94,10 +94,12 @@ else
 	packageversion=$version-$revision
 fi
 sourcename=$KDEB_SOURCENAME
-packagename=linux-image-$version
-kernel_headers_packagename=linux-headers-$version
+packagename=linux-image-next$LOCALVERSION
+kernel_headers_packagename=linux-headers-next$LOCALVERSION
+dtb_packagename=linux-dtb-next$LOCALVERSION
 dbg_packagename=$packagename-dbg
 debarch=
+image_name=
 set_debarch
 
 if [ "$ARCH" = "um" ] ; then
@@ -200,6 +202,11 @@ Architecture: $debarch
 Description: Linux kernel debugging symbols for $version
  This package will come in handy if you need to debug the kernel. It provides
  all the necessary debug symbols for the kernel and its modules.
+
+Package: $dtb_packagename
+Architecture: $debarch
+Description: Linux DTB, version $version
+ This package contains device blobs from the Linux kernel, version $version
 EOF
 
 cat <<EOF > debian/rules
