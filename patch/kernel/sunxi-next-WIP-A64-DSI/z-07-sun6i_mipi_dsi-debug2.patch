diff --git a/arch/arm64/boot/dts/allwinner/sun50i-a64-sopine-baseboard.dts b/arch/arm64/boot/dts/allwinner/sun50i-a64-sopine-baseboard.dts
index fc94f2893..cb4d6a5b7 100644
--- a/arch/arm64/boot/dts/allwinner/sun50i-a64-sopine-baseboard.dts
+++ b/arch/arm64/boot/dts/allwinner/sun50i-a64-sopine-baseboard.dts
@@ -199,6 +199,8 @@
 };
 
 &r_pwm {
+	pinctrl-names = "default";
+	pinctrl-0 = <&r_pwm_pin>;
 	status = "okay";
 };
 
diff --git a/drivers/gpu/drm/sun4i/sun4i_tcon.c b/drivers/gpu/drm/sun4i/sun4i_tcon.c
index 1e252f910..b2f4d1981 100644
--- a/drivers/gpu/drm/sun4i/sun4i_tcon.c
+++ b/drivers/gpu/drm/sun4i/sun4i_tcon.c
@@ -977,13 +977,16 @@ static bool sun4i_tcon_connected_to_tcon_top(struct device_node *node)
 	struct device_node *remote;
 	bool ret = false;
 
+	printk("DEBUG - sun4i_tcon_connected_to_tcon_top - Entering\n");
 	remote = of_graph_get_remote_node(node, 0, -1);
 	if (remote) {
+		printk("DEBUG - sun4i_tcon_connected_to_tcon_top - remote is valid\n");
 		ret = !!(IS_ENABLED(CONFIG_DRM_SUN8I_TCON_TOP) &&
 			 of_match_node(sun8i_tcon_top_of_table, remote));
 		of_node_put(remote);
 	}
-
+	
+	printk("DEBUG - sun4i_tcon_connected_to_tcon_top - Exiting - ret = %d\n",ret);
 	return ret;
 }
 
@@ -1228,7 +1231,15 @@ static int sun4i_tcon_bind(struct device *dev, struct device *master,
 		 * just probe the LVDS connector. Otherwise, just probe RGB as
 		 * we used to.
 		 */
+		if (dev->of_node)
+			printk("DEBUG - sun4i_tcon_bind - dev->of_node is valid\n");
+		else
+			printk("DEBUG - sun4i_tcon_bind - dev->of_node is invalid\n");
 		remote = of_graph_get_remote_node(dev->of_node, 1, 0);
+		if (remote)
+			printk("DEBUG - sun4i_tcon_bind - remot is valid\n");
+		else
+			printk("DEBUG - sun4i_tcon_bind - remot is invalid\n");
 		printk("DEBUG - panel-lvds - checking compatible\n");
 		if (of_device_is_compatible(remote, "panel-lvds"))
 			if (can_lvds)
@@ -1407,14 +1418,20 @@ static int sun8i_r40_tcon_tv_set_mux(struct sun4i_tcon *tcon,
 
 	port = of_graph_get_port_by_id(tcon->dev->of_node, 0);
 	if (!port)
+	{
+		printk("DEBUG - sun4i_tcon_bind - port failed\n");
 		return -EINVAL;
+	}
 
 	id = sun4i_tcon_of_get_id_from_port(port);
 	of_node_put(port);
 
 	remote = of_graph_get_remote_node(tcon->dev->of_node, 0, -1);
 	if (!remote)
-		return -EINVAL;
+	{
+		printk("DEBUG - sun4i_tcon_bind - remote failed\n");
+		return -EINVAL;	
+	}
 
 	pdev = of_find_device_by_node(remote);
 	of_node_put(remote);
@@ -1425,7 +1442,10 @@ static int sun8i_r40_tcon_tv_set_mux(struct sun4i_tcon *tcon,
 	    encoder->encoder_type == DRM_MODE_ENCODER_TMDS) {
 		ret = sun8i_tcon_top_set_hdmi_src(&pdev->dev, id);
 		if (ret)
+		{
+			printk("DEBUG - sun4i_tcon_bind - pdev failed\n");
 			return ret;
+		}
 	}
 
 	if (IS_ENABLED(CONFIG_DRM_SUN8I_TCON_TOP)) {
@@ -1433,7 +1453,7 @@ static int sun8i_r40_tcon_tv_set_mux(struct sun4i_tcon *tcon,
 		if (ret)
 			return ret;
 	}
-
+	
 	return 0;
 }
 
diff --git a/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c b/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c
index 166f8d6f5..1098ad289 100644
--- a/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c
+++ b/drivers/gpu/drm/sun4i/sun6i_mipi_dsi.c
@@ -1018,6 +1018,10 @@ static int sun6i_dsi_bind(struct device *dev, struct device *master,
 	int ret;
 
 	printk("DEBUG - sun6i_dsi_bind - Entering\n");
+	if (dev)
+		printk("DEBUG - sun6i_dsi_bind - dev is valid\n");
+	else
+		printk("DEBUG - sun6i_dsi_bind - dev is invalid\n");
 
 	if (!dsi->panel)
 	{
@@ -1093,9 +1097,17 @@ static int sun6i_dsi_probe(struct platform_device *pdev)
 	void __iomem *base;
 	int ret;
 
+	printk("DEBUG - sun6i_dsi_probe - Entering\n");
+	if (pdev)
+		printk("DEBUG - sun6i_dsi_probe - pdev is valid\n");
+	else
+		printk("DEBUG - sun6i_dsi_probe - pdev i sinvalid\n"); 
 	dsi = devm_kzalloc(dev, sizeof(*dsi), GFP_KERNEL);
 	if (!dsi)
+	{
+		printk("DEBUG - sun6i_dsi_probe - ENOMEM\n");
 		return -ENOMEM;
+	}
 	dev_set_drvdata(dev, dsi);
 	dsi->dev = dev;
 	dsi->host.ops = &sun6i_dsi_host_ops;
@@ -1169,10 +1181,12 @@ static int sun6i_dsi_probe(struct platform_device *pdev)
 
 	ret = component_add(&pdev->dev, &sun6i_dsi_ops);
 	if (ret) {
+		printk("DEBUG - sun6i_dsi_probe - FAILED - Register component\n");
 		dev_err(dev, "Couldn't register our component\n");
 		goto err_remove_dsi_host;
 	}
-
+	
+	printk("DEBUG - sun6i_dsi_probe - Exiting\n");
 	return 0;
 
 err_remove_dsi_host:
@@ -1206,6 +1220,11 @@ static int __maybe_unused sun6i_dsi_runtime_resume(struct device *dev)
 {
 	struct sun6i_dsi *dsi = dev_get_drvdata(dev);
 
+	printk("DEBUG - sun6i_dsi_runtime_resume - Entering\n");
+	if (dev)
+		printk("DEBUG - sun6i_dsi_runtime_resume - dev is valid\n");
+	else
+		printk("DEBUG - sun6i_dsi_runtime_resume - dev is invalid\n");
 	reset_control_deassert(dsi->reset);
 	if (dsi->variant->has_mod_clk)
 		clk_prepare_enable(dsi->mod_clk);
@@ -1229,6 +1248,7 @@ static int __maybe_unused sun6i_dsi_runtime_resume(struct device *dev)
 
 	regmap_write(dsi->regs, SUN6I_DSI_DEBUG_DATA_REG, 0xff);
 
+	printk("DEBUG - sun6i_dsi_runtime_resume - Exiting\n");
 	return 0;
 }
 
diff --git a/drivers/of/property.c b/drivers/of/property.c
index 063d02e9c..08b447a6e 100644
--- a/drivers/of/property.c
+++ b/drivers/of/property.c
@@ -792,6 +792,12 @@ struct device_node *of_graph_get_remote_node(const struct device_node *node,
 	struct device_node *endpoint_node, *remote;
 
 	printk("DEBUG - of_graph_get_remote_node - Entering.\n");
+	if (!node)
+		printk("DEBUG - of_graph_get_remote_node - node is NULL\n");
+	else
+		printk("DEBUG - of_graph_get_remote_node - node is valid\n");
+	printk("DEBUG - of_graph_get_remote_node - port = %u\n",port);
+	printk("DEBUG - of_graph_get_remote_node - endpoint = %u\n",endpoint);
 	endpoint_node = of_graph_get_endpoint_by_regs(node, port, endpoint);
 	if (!endpoint_node) {
 		pr_debug("no valid endpoint (%d, %d) for node %pOF\n",
